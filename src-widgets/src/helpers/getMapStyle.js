const getMapStyle = (key, data) => {
    const getmapStyles = {
        route: {
            id: 'route',
            type: 'line',
            source: 'directions',
            layout: {
                'line-join': 'round',
                'line-cap': 'round',
            },
            paint: {
                'line-color': data.routeColor || '#9C27B0',
                'line-width': data.routeWidth,
                'line-opacity': 1.0,
            },
        },
        speedTraps: {
            id: 'speed-traps',
            type: 'circle',
            source: 'traps',
            filter: ['match', ['get', 'type_name'], 'speed-trap', true, false],
            paint: {
                'circle-opacity': 1.0,
                'circle-stroke-width': 6,
                'circle-stroke-color': ['match',
                    ['get', 'status'],
                    'NEW', data.speedTrapStrokeNewColor || 'rgba(232,10,10,0.4)',
                    'ESTABLISHED', data.speedTrapStrokeColor || 'rgba(13,77,133,0.4)',
                    data.speedTrapStrokeColor || 'rgba(13,77,133,0.4)'],
                'circle-color': [
                    'step',
                    ['to-number', ['get', 'vmax']],
                    ['match',
                        ['get', 'status'],
                        'NEW', data.symbolNewColor || 'rgba(232,10,10,0.7)',
                        'ESTABLISHED', data.symbolColor || 'rgba(13,77,133,0.8)',
                        data.symbolColor || 'rgba(13,77,133,0.8)'],
                    80,
                    ['match',
                        ['get', 'status'],
                        'NEW', data.symbolNewColor || 'rgba(232,10,10,0.7)',
                        'ESTABLISHED', data.symbolColor || 'rgba(13,77,133,0.8)',
                        data.symbolColor || 'rgba(13,77,133,0.8)'],
                ],
                'circle-radius': [
                    'step',
                    ['to-number', ['get', 'vmax']],
                    20,
                    99,
                    22,
                ],
            },
        },
        speedTrapsVmax: {
            id: 'speed-traps-vmax',
            type: 'symbol',
            source: 'traps',
            layout: {
                'text-allow-overlap': true,
                'text-field': [
                    'format',
                    ['get', 'vmax'],
                    {
                        'text-font': ['literal', ['DIN Offc Pro Medium', 'Arial Unicode MS Bold']],
                        'text-color': ['match',
                            ['get', 'status'],
                            'NEW', data.symbolTextNewColor || 'rgba(123,25,25,0.95)',
                            'ESTABLISHED', data.symbolTextColor || 'rgba(10,34,55,0.95)',
                            data.symbolTextColor || 'rgba(10,34,55,0.95)'],
                    },
                ],
                'text-offset': ['match', ['get', 'type_name'],
                    'fixed-trap', ['literal', [-0.3, -0.6]],
                    'mobile-trap', ['literal', [-0.3, -0.35]],
                    ['literal', [0, 0]]],
                'text-size': 16,
            },
        },
        traps: {
            id: 'traps',
            type: 'symbol',
            source: 'traps',
            layout: {
                'icon-allow-overlap': true,
                'icon-image': [
                    'match',
                    ['get', 'type_name'],
                    'fixed-trap', 'icon-fixed-trap',
                    'mobile-trap', 'icon-mobile-trap',
                    'traffic-jam', 'icon-traffic-jam',
                    'road-work', 'icon-road-work',
                    'accident', 'icon-accident',
                    'object', 'icon-object',
                    'sleekness', 'icon-sleekness',
                    'fog', 'icon-fog',
                    'police-news', 'icon-police-news',
                    '',
                ],
                'icon-size': [
                    'interpolate',
                    ['linear'],
                    ['zoom'],
                    0,
                    1.0,
                    10,
                    1.2,
                    14,
                    1.6,
                ],
            },
            paint: {
                'icon-color': [
                    'match',
                    ['get', 'status'],
                    'NEW', data.symbolNewColor || 'rgba(232,10,10,0.7)',
                    'ESTABLISHED', data.symbolColor || 'rgba(13,77,133,0.8)',
                    data.symbolColor || 'rgba(13,77,133,0.8)',

                ],
                'icon-opacity': 1.0,
            },
        },
        clusterTraps: {
            id: 'cluster-traps',
            type: 'circle',
            source: 'traps',
            filter: ['has', 'point_count'],
            paint: {
                'circle-opacity': 1.0,
                'circle-color': [
                    'step',
                    ['get', 'point_count'],
                    data.clusterColor || 'rgba(197,14,228,0.4)',
                    100,
                    data.clusterColor || 'rgba(197,14,228,0.4)',
                    750,
                    data.clusterColor || 'rgba(197,14,228,0.4)',
                ],
                'circle-radius': [
                    'step',
                    ['get', 'point_count'],
                    12,
                    9,
                    15,
                    99,
                    18,
                ],
            },
        },
        clusterTrapsCount: {
            id: 'cluster-traps-count',
            type: 'symbol',
            source: 'traps',
            filter: ['has', 'point_count'],
            layout: {
                'text-allow-overlap': true,
                'text-field': [
                    'format',
                    ['get', 'point_count_abbreviated'],
                    {
                        'text-font': ['literal', ['DIN Offc Pro Medium', 'Arial Unicode MS Bold']],
                        'text-color': data.clusterTextColor || 'rgba(52,27,57,0.95)',
                    },
                ],
                'text-size': 12,
            },
        },
        lineBackground: {
            id: 'line-background',
            type: 'line',
            source: 'polys',
            paint: {
                'line-color': 'red',
                'line-width': 6,
                'line-opacity': 0.4,
            },
        },
        lineDashed: {
            id: 'line-dashed',
            type: 'line',
            source: 'polys',
            paint: {
                'line-color': ['match', ['get', 'type'], '20', 'red', 'white'],
                'line-width': 6,
                'line-dasharray': [0, 4, 3],
            },
        },
        trafficClosure: {
            id: 'traffic-closure',
            type: 'symbol',
            source: 'polys',
            filter: ['all', ['==', 'type', 'closure'], ['==', '$type', 'Point']],
            layout: {
                'icon-allow-overlap': true,
                'icon-image': 'icon-traffic-closure',
                'icon-size': [
                    'interpolate',
                    ['linear'],
                    ['zoom'],
                    6,
                    0.2,
                    10,
                    0.3,
                    14,
                    0.4,
                ],
            },
            paint: {
                'icon-opacity': 1.0,
            },
        },
        areaSurface: {
            id: 'area-surface',
            type: 'fill',
            source: 'areaPolygons',
            paint: {
                'fill-color': data.polygonColor || 'rgba(10,138,232,0.15)',
                'fill-opacity': 1.0,
            },
        },
        areaSurfaceBorder: {
            id: 'area-surface-border',
            type: 'line',
            source: 'areaPolygons',
            paint: {
                'line-color': data.polygonBorderColor || 'rgba(61,156,226,0.6)',
                'line-width': data.polygonBorder || 4,
            },
        },
    };

    return getmapStyles[key];
};

export { getMapStyle };
